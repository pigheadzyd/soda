Testing format:
All lines starting with '>' are command line arguments, and lines indented with 
4 spaces are command line outputs. '...' means some lines of outputs are omitted.

## Invalid Argument Tests:

Test with file not exist:
  > ./soda fileNotExist
    Error: could not open input file "fileNotExist"

Test with negative seed:
  > ./soda soda.config -1
    Usage: ./soda [ config-file [ random-seed (> 0) ] ]

Test with wrong number of arguments
  > ./soda soda.config 12 34
    Usage: ./soda [ config-file [ random-seed (> 0) ] ]

All above test shows error message correctly.

## Core Logic test:
The main purpose of this test is to test if all parts are functionally working by tracing 
the output. 
# The input file:
  > cat soda.config 
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
    NumStudents             2    # number of students to create
    MaxPurchases            8    # maximum number of bottles a student purchases
    NumVendingMachines      3    # number of vending machines
    MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
    MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                                 #    plant per production run
    TimeBetweenShipments    3    # length of time between shipment pickup
    GroupoffDelay          10    # length of time between new initializing gift cards
    ParentalDelay           2    # length of time between new deposits of funds
    NumCouriers             1    # maximum number of couriers in the pool

# Places to verify:
Printer:
- The number of columns are correct
- The starting line and ending line are showing correctly
- The class with multiple instances are printed to correct column

Student:
- The favourite flavour and number of total purchases prints out with 'S'
- The total soda consumed is consistent with the number above
- The soda type consumed is consistent with the flavour above
- Vender machine is selected correctly at the begining
- Students are looping the vending machines seperately
- The student finishing message printed

WATCardOffice:
- 'W' is print after create call or transfer call
- 'W' is corresponding ( and one-to-one ) to 'ta,b' in Courier column
- 'Cx,y's have correct value, in this case, b=5.
- 'Cx,y' is before 'Tx,z' for same a.
- Second or later 'Cx,y's are correspond to 'L' in Student x, or a 'Lx' of a courier. 
- Any y value of 'Tx,y' should be $cost + 5$, which is 7 in this case.
- The start and finish message is printed.

Courier:
- Each courier starts with Watcard office, and finished eventually
- The next print out for 'tx,y' should be either 'Tx,y' or 'Lx', and they should only be
  printed out after 'tx,y'
- The value carried by each courier can be cross validated with watcard office
- The wait time of courier is determined by Parents, and courier should return once money is there

Parent:
- The money parent is depositing is only 1, 2 or 3.
- Parent starts and finishes
- If track the total amount of parent is deposited, it can be cross varified with Couriers.

Groupoff:
- Groupoff starts and finishes.
- Groupoff will sent out at most the number of students time, in this case is 2.
- The amount of gift is same as the soda cost, in this case is 2.

VendingMachine:
- Starts with correct price, in this case is 2.
- 'r' and 'R' is correspond to Truck's 'd', 'U', and 'D'
- No buys during 'r' and 'R'
- No buys if no stock (which cannot be look into details)
- Finishes correctly.

NameServer:
- Machine register message can be verified with each machine
- 'Nx,y' command can be cross verified with student x's 'Vy'
- Each student is looping the machine individually
- Starts adn finishes correctly

BottlingPlant:
- The number of generated bottles should below $4 * MaxShippedPerFlavour$, which is 12 this case.
- No consecutive 'G' or 'P'.
- Each 'P' of plant is correspond to 'Px' of Truck, and x is the number of previous production.
- Starts and finishs correctly

Truck:
- Starts after bottlingPlant
- 'd', 'U', 'D' appears in order
- 'Dx,y' and next 'dx,y' has same y value, first 'dx,y' is same as 'Py'
- 'Dx,0' then no more delivery this truckload. 
- If plant is shut down, no more pick up after this run, and the truck is finished as well

Other:
- Program finished successfully
- No memory leak

# The input and output
Here is a test for the default configuration, where config file by default should be "soda.config", and
seed is randomly generated.
  > ./soda
    Parent  Gropoff WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
    ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    S       S       S       S                                                               S
    D0,2                    R0                                      S2
    D1,1                    R1                                              S2
    D1,3                    R2              S                                       S2
                    C0,5    N0,0            G8      S2,7
    D1,2            W               S               V0      S2,7                            t0,5
    D1,1                            P8
                    C1,5            d0,8    P
    D0,2                    N1,1    U0,12   G7              V1      r
    D1,3                            D0,0                            R
    D1,3
    D1,3
    D0,1            W                                                                       T0,5
                                                                                            t1,5
                                    P7                                                      L1
    D1,1    D2      C1,5            d1,7    P               L
                                    U1,13   G5                              r
                    W               D1,0                                                    t1,5
    D0,3                                                                    R               T1,5
    D0,2                            P5
                                    d2,5    P
    D0,1                            U2,15   G8                                      r
    D0,1                            D2,0            a2,2    B2,3            B2,2    R
                                    P8
    D0,1    D2                      d0,8    P
                                    U0,5    G3                      r
    D0,2                            D0,0                    B2,1    R       B2,1
    D1,3                                                    G2,0            B2,0
    D0,1
    D0,1                            P3
                                    d1,3    P
    D0,2                            U1,13   G7      a2,2                    r
    D0,1                            D1,0                                    R
                                    P7
    D1,2            T1,7            d2,7    P
                                    U2,8    G5      G2,0            B2,2            r
                    W               D2,0                                                    t1,7
    D1,1                                            B2,3            B2,1            R       T1,7
    D1,3                    N1,2                            V2
    D1,3                                                    B2,6                    B2,1
    D0,2
    D0,3                            P5
                                    d0,5    P
    D1,3                            U0,5    G7                      r
                                    D0,2
    D0,2                            d1,2            A2,3            R       r
                                    U1,11
    D0,2                            D1,0                    B2,4            R       B2,0
    D0,3                    N1,0                            V0
    D0,2                                                    B2,2    B2,1
    D1,1                            P7
    D1,1                            d2,7    P
                                    U2,6    G8      B2,1            B2,0            r
                                    D2,3
    D1,2                    N1,1    d0,3                    V1                      R
    D0,2
    D1,3                            U0,6                            r
                                    D0,1
    D0,3                            d1,1                            R       r
                                    U1,10
    D1,1            T0,7    N1,2    D1,0                    V2              R
    D1,1            W                                                                       t0,7
    D1,3                                                                                    T0,7
    D0,2                            P8                      A2,2
    D0,3                            d2,8    P
                                    U2,4    G8                                      r
                                    D2,5
    D0,3                            d0,5                            r               R
                                    U0,6
                                    D0,5
    D0,3                    N0,1    d1,5            V1              R       r
                                    U1,8
    D1,1                    N0,2    D1,3            V2                      R
    D0,1
    D0,1                            P8
    D1,3                            d2,8    P
                                    U2,3    G6                                      r
                                    D2,7
    D0,3                            d0,7                            r               R
                                    U0,5
                                    D0,6
    D0,2                            d1,6            B2,6            R       r       B2,1
                                    U1,7
    D0,1                            D1,5            F       F               R
    D0,1
    D1,2
    D0,1                            P6
    D1,2                            d2,6    P                                       r
                                    U2,2
                                    D2,4
    D0,1                            d0,4                            r               R
                                    U0,5
                                    D0,4
    D0,1                            d1,4                            R       r
                                    U1,6
    D1,2                            D1,3                                    R
    D1,1
    D0,1
    D0,3                            F       F
    D1,1                                                            F
    D1,3                                                                    F
    D0,1                                                                            F
    D0,2                    F
    D1,2
    D1,2    F       F                                                                       F
    D1,2
    F
    ***********************

By checking the above selected output, all basic logics of all classes are satisfied.
Now is testing some special edge cases.
## Special Cases:

# Giftcard purchases
  > cat payWithGiftcard.config 
    SodaCost                3    # Manufacturer Suggested Retail Price (MSRP) per bottle
    NumStudents             2    # number of students to create
    MaxPurchases            1    # maximum number of bottles a student purchases
    NumVendingMachines      3    # number of vending machines
    MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
    MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                                 #    plant per production run
    TimeBetweenShipments    10    # length of time between shipment pickup
    GroupoffDelay           1    # length of time between new initializing gift cards
    ParentalDelay           3    # length of time between new deposits of funds
    NumCouriers             1    # maximum number of couriers in the pool

This case forces students to use giftcard to buy one drink by setting parentalDelay higher than 
GroupoffDelay, the major problem here is potential memory leak as card is on courier and 
dilivered to no one. Also students should finish successfully and not be blocked forever.

  > ./soda payWithGiftcard.config 
    Parent  Gropoff WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
    ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    S       S       S       S                                                               S
    D1,2                    R0                                      S3
                            R1                                              S3
    D0,1                    R2              S                                       S3
                    C0,5    N0,0            G9      S1,1
    D1,3            W               S               V0      S3,1                            t0,5
    D1,3    D3      C1,5    N1,1                            V1
    D1,3    D3              N0,1                    V1
    D1,1                    N0,2    P9      P       V2
                            N0,0    d0,9    G7      V0              r
                                    U0,11
    D1,2                    N1,2    D0,0                    V2      R
    D0,3                    N1,0                            V0      B3,2
    D1,2                            P7                      G3,0
    D1,2                            d1,7    P
                                    U1,13   G4      G1,0            B1,0    r
    D0,1            W               D1,0                                    R               L0
                                                                                            t1,5
    D1,1                                            F       F                               T1,5
    D1,2                            P4
    D0,3                            d2,4    P                                       r
                                    U2,16
    D1,3                            D2,0                                            R
    D0,3
    D0,1
    D0,3                            F       F
    D1,3                                                            F       F
    D0,3                                                                            F
    D1,2                    F
    D0,3    F       F                                                                       F
    D1,2
    F
    ***********************

We can see that all properties from above holds, and no warning message, and all processes stopped 
eventually.


# Multiple Couriers
  > cat highCourier.config 
  SodaCost                3    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             4    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  GroupoffDelay          10    # length of time between new initializing gift cards
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             4    # maximum number of couriers in the pool

Before we only used one courier, this case used multiple couriers and the program should finished 
with no error.
The program run with this config serveral times and finished with no error.

  > ./soda highCourier.config 
    Gropoff WATOff  Stud0   Stud1   Stud2   Stud3   Cour0   Cour1   Cour2   Cour3
    ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
    S       S                                       S       S       S       S
                                                   
                                                   
                                                   
            C0,5    S3,2
            W       V0      S1,2    S2,2    S1,3    t0,5
            C1,5            V1
            W                                               t1,5
            C2,5                    V2
                   
            W                                                       t2,5
                                                   
            C3,5                            V0      T0,5
            W                                                               t3,5
            C1,5            L               B1,2            L1              T3,5
                   
            W                                       t1,5
                                                    T1,5
    D3      T3,8    B3,2                           
            W                                                               t3,8
                   
                                                   
                                                   
                   
                            B1,2                   
                                    V0             
    D3      T0,8                                                    T2,5
            W                       a2,3                    t0,8
            T1,8
            W                                       t1,8
                   
                   
                                                   
    D3                                             
                            G1,0                   
                                    G2,0           
    ...
    ...
    ***********************
Some columns and lines is cut due to space. The above shows that same logic still applies to 
multiple couriers case.

The output for below tests are omitted due to space issue, but all outputs are verified
# Large delay
  > cat highDelayAll.config 
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
    NumStudents             2    # number of students to create
    MaxPurchases            8    # maximum number of bottles a student purchases
    NumVendingMachines      3    # number of vending machines
    MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
    MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                                 #    plant per production run
    TimeBetweenShipments   15     # length of time between shipment pickup
    GroupoffDelay          30    # length of time between new initializing gift cards
    ParentalDelay          30    # length of time between new deposits of funds
    NumCouriers             4    # maximum number of couriers in the pool

This output for this configuration is omitted, but the program finished and outputs are consistent with 
above rules.

# High soda cost
  > cat highSodaCost.config 
    SodaCost                10    # Manufacturer Suggested Retail Price (MSRP) per bottle
    NumStudents             2    # number of students to create
    MaxPurchases            8    # maximum number of bottles a student purchases
    NumVendingMachines      3    # number of vending machines
    MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
    MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                                 #    plant per production run
    TimeBetweenShipments    3    # length of time between shipment pickup
    GroupoffDelay          10    # length of time between new initializing gift cards
    ParentalDelay          10    # length of time between new deposits of funds
    NumCouriers             1    # maximum number of couriers in the pool

This config forces students call transfer everytime before they buy soda with their watcard.
Program finished and all outputs are consistent with above rules.

#Long shipment time
  > cat longShipment.config 
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
    NumStudents             5    # number of students to create
    MaxPurchases            8    # maximum number of bottles a student purchases
    NumVendingMachines      2    # number of vending machines
    MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
    MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                                 #    plant per production run
    TimeBetweenShipments   15    # length of time between shipment pickup
    GroupoffDelay          10    # length of time between new initializing gift cards
    ParentalDelay           2    # length of time between new deposits of funds
    NumCouriers             1    # maximum number of couriers in the pool

This config forces students search each machine multiple times before machines get loaded.
Program finished and all outputs are consistent with above rules.












